name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ dev ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write
  issues: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Inspect build output
        run: |
          echo "Built files:" && ls -la dist
          echo "--- dist/index.html (head) ---"
          head -n 30 dist/index.html

      - name: Lighthouse CI (performance budget)
        run: npx lhci autorun --config=./.lighthouserc.json

      - name: Create SPA fallback
        run: |
          cp dist/index.html dist/404.html

      - name: Add .nojekyll
        run: |
          echo > dist/.nojekyll

      - name: Inject build fingerprint
        run: |
          echo "<!-- build: $GITHUB_SHA $(date -u +%Y-%m-%dT%H:%M:%SZ) -->" >> dist/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy Preview to GitHub Pages
        id: preview
        if: github.event_name == 'pull_request'
        uses: actions/deploy-pages@v4

      - name: Deploy to GitHub Pages (production)
        id: deployment
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/deploy-pages@v4

      - name: Comment preview URL on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          PREVIEW_URL: ${{ steps.preview.outputs.page_url }}
        with:
          script: |
            const pr = (context.payload.pull_request && context.payload.pull_request.number) || null;
            if (!pr) { core.info('No PR number found'); return; }
            const url = process.env.PREVIEW_URL || '';
            if (!url) { core.warning('No preview URL from deploy step'); return; }
            const body = `ðŸš€ Preview deployed: ${url}`;
            await github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: pr, body });

  preview_gate:
    if: github.event_name == 'pull_request'
    needs: [build, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Preview ready gate
        run: echo "Preview deployment succeeded and is ready for review."
