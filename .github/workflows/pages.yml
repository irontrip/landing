name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ dev ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write
  issues: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Inspect build output
        run: |
          echo "Built files:" && ls -la dist
          echo "--- dist/index.html (head) ---"
          head -n 30 dist/index.html

      - name: Lighthouse CI (performance budget)
        run: npx lhci autorun --config=./.lighthouserc.json

      - name: Create SPA fallback
        run: |
          cp dist/index.html dist/404.html

      - name: Add .nojekyll
        run: |
          echo > dist/.nojekyll

      - name: Inject build fingerprint
        run: |
          echo "<!-- build: $GITHUB_SHA $(date -u +%Y-%m-%dT%H:%M:%SZ) -->" >> dist/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy Preview to GitHub Pages
        id: preview
        if: github.event_name == 'pull_request'
        uses: actions/deploy-pages@v4

      - name: Resolve preview URL (API)
        if: github.event_name == 'pull_request'
        id: resolve
        env:
          GH_TOKEN: ${{ github.token }}
          DEPLOYMENT_ID: ${{ steps.preview.outputs.deployment_id }}
        run: |
          set -euo pipefail
          if [ -z "${DEPLOYMENT_ID:-}" ]; then
            echo "No deployment_id from preview step" >&2
            exit 0
          fi
          echo "Resolving preview URL for deployment $DEPLOYMENT_ID"
          # Install jq if missing
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update -y && sudo apt-get install -y jq >/dev/null
          fi
          api="https://api.github.com/repos/${{ github.repository }}/pages/deployments/${DEPLOYMENT_ID}"
          url=$(curl -sfSL -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" "$api" | jq -r '.preview_url // .page_url // ""')
          echo "preview_url=$url" >> "$GITHUB_OUTPUT"
          echo "Preview URL: $url" >> "$GITHUB_STEP_SUMMARY"

      - name: Comment preview URL on PR (curl)
        if: github.event_name == 'pull_request' && steps.resolve.outputs.preview_url != ''
        env:
          GH_TOKEN: ${{ github.token }}
          PREVIEW_URL: ${{ steps.resolve.outputs.preview_url }}
        run: |
          set -euo pipefail
          pr_number='${{ github.event.pull_request.number }}'
          data=$(jq -nc --arg body "ðŸš€ Preview deployed: ${PREVIEW_URL}" '{body: $body}')
          curl -sfSL -X POST \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -d "$data" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${pr_number}/comments"

      - name: Deploy to GitHub Pages (production)
        id: deployment
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: actions/deploy-pages@v4

  preview_gate:
    if: github.event_name == 'pull_request'
    needs: [build, deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Preview ready gate
        run: echo "Preview deployment succeeded and is ready for review."
